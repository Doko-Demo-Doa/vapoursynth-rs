# Based on https://github.com/starkat99/appveyor-rust
image: Visual Studio 2019

environment:
  matrix:
    - channel: stable
      target: x86_64-pc-windows-msvc
    - channel: stable
      target: i686-pc-windows-msvc
    - channel: stable
      target: x86_64-pc-windows-gnu
    - channel: stable
      target: i686-pc-windows-gnu

    - channel: beta
      target: x86_64-pc-windows-msvc
    - channel: beta
      target: i686-pc-windows-msvc
    - channel: beta
      target: x86_64-pc-windows-gnu
    - channel: beta
      target: i686-pc-windows-gnu

    - channel: nightly
      target: x86_64-pc-windows-msvc
    - channel: nightly
      target: i686-pc-windows-msvc
    - channel: nightly
      target: x86_64-pc-windows-gnu
    - channel: nightly
      target: i686-pc-windows-gnu

matrix:
  allow_failures:
    - channel: nightly

install:
  # Install Rust.
  - appveyor DownloadFile https://win.rustup.rs/ -FileName rustup-init.exe
  - rustup-init -yv --default-toolchain %channel% --default-host %target%
  - set PATH=%PATH%;%USERPROFILE%\.cargo\bin
  - set RUST_BACKTRACE=1
  - rustc -vV
  - cargo -vV

  # The set expressions are in quotes to prevent extra space from being added in the end of the variables.
  - if "%target:~0,4%" == "i686" (
      set "arch=i686" &
      set "suffix=32" &
      set "vapoursynth=%programfiles(x86)%\VapourSynth-32" &
      set "python=C:\Python37"
    ) else (
      set "arch=x86_64" &
      set "suffix=64" &
      set "vapoursynth=%programfiles%\VapourSynth" &
      set "python=C:\Python37-x64"
    )

  # Set up Python paths, otherwise VapourSynth can't initialize it.
  - set "PATH=%python%;%PATH%"
  - set "PYTHONPATH=%python%\DLLs;%python%\Lib;%python%\Lib\site-packages"
  - set "PYTHONHOME=%python%"

  # Install VapourSynth.
  - appveyor DownloadFile https://github.com/vapoursynth/vapoursynth/releases/download/R47.2/VapourSynth%suffix%-R47.2.exe
  - VapourSynth%suffix%-R47.2 /SP- /VERYSILENT /SUPPRESSMSGBOXES /NORESTART
  - set PATH=%PATH%;%vapoursynth%\core

  # On GNU toolchains make sure gcc is installed to MSYS2 and add the correct bin directory to PATH.
  # gcc.exe is required for the cc crate, which is used by the backtrace crate.
  - if "%target:~-3%" == "gnu" (
      C:\msys64\usr\bin\bash -lc "pacman --noconfirm -S --needed mingw-w64-%arch%-gcc" &
      set "PATH=%PATH%;C:\msys64\mingw%suffix%\bin"
    )

build: off

test_script:
  # Test with all possible combinations of all features.
  - cd vapoursynth
  - python ..\.travis\run-tests.py
  - cd ..

  # Run sample plugin tests.
  - cd sample-plugin
  - cargo build --verbose

  # Don't run the plugin tests on i686-pc-windows-gnu as that seems to have issues with function exporting.
  # https://github.com/rust-lang/rust/issues/50176
  - if not "%target%" == "i686-pc-windows-gnu" (
      cargo run --verbose --bin test --features "cfg-if vapoursynth/vapoursynth-functions vapoursynth/vsscript-functions"
    )

  - cd ..
